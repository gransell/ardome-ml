#!/usr/bin/env bash

die( )
{
	echo >&2 "$*" ; exit 1
}

run( )
{
	echo "+ $@" && "$@" || die "Test run failed - aborting"
}

[ "$#" -eq 0 ] && die "Usage: `basename $0` <graph>"

playit=0
[ "$1" == "--play" ] && playit=1 && shift

hash amlbatch 2> /dev/null || PATH=`pwd`:$PATH
hash amlbatch 2>/dev/null || die "No amlbatch available - aborting"
hash md5sum 2>/dev/null && MD5=md5sum || MD5=md5
hash $MD5 2>/dev/null || die "No md5 or md5sum available - aborting"

# We don't care too much about maintaining aspect ratio here, we just want to avoid using too much disk space
colourspace="filter:colour_space pf=yuv420p"
visualise="filter:visualise width=160 height=90"
rescale="filter:rescale width=160 height=90"
#threader="filter:distributor threads=-1"

run amlbatch --no-stats "$@" $colourspace $rescale $visualise $threader -- t1.raw
run amlbatch --no-stats t1.raw.aml filter:clip in=-1 out=0 -- t2.raw
run amlbatch --no-stats "$@" $colourspace $rescale $threader filter:clip in=-1 out=0 $visualise reverse=1 -- t3.raw

r1=`$MD5 < t2.raw | cut -f1 -d ' '`
r2=`$MD5 < t3.raw | cut -f1 -d ' '`

[ "$r1" = "$r2" ] && echo "Success $r1" || echo "Fail $r1 $r2"

[ "$playit" = "1" ] && amlbatch colour: width=320 height=90 t2.raw filter:lerp @@w=0.5 t3.raw filter:lerp @@w=0.5 @@x=0.5 filter:compositor slots=3

rm t[123].raw t[123].raw.aml
