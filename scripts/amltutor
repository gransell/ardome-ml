#!/usr/bin/env amlbatch

amltutor.aml
amldocs.aml

: --help
	{     
	$ "Usage: " ,
	$ "" ,
	$ "amltutor <graph> [ -- ( <store> )* ]" ,
	$ "" ,
	$ "Use --simple for examples of player use" ,
	$ "Use --editing for some basic editing info" ,
	$ "" ,
	$ "Use --graphs for an explaination of graph definition" ,
	$ "Use --stores for an explaination of store definitions" ,
	$ "" ,
	$ "Use --input for detailed reports on available inputs" ,
	$ "Use --filter for detailed reports on available filters" ,
	$ "Use --store for detailed reports on available stores" ,
	$ "" ,
	$ "Use --advanced for additional command line switches" ,
	}
;

: --simple
	{
	$ "Simple Player:" ,
	$ "" ,
	$ "amltutor video.mpg" ,
	$ "amltutor audio.mp2" ,
	$ "" ,
	$ "During playout, the following key presses are honoured:" ,
	$ "" ,
	$ "Esc  : close the window and exit" ,
	$ "0    : return to the first frame" ,
	$ "-    : go to last frame" ,
	$ "jkl  : reverse, pause, forward and change pitch (repeated j/l presses)" ,
	$ "up   : backward 100 frames" ,
	$ "down : forward 100 frames" ,
	$ "left : step 1 frame backward" ,
	$ "right: step 1 frame forward" ,
	$ "" ,
	$ "Use --editing for some basic editing info" ,
	}
;

: --editing
	{
	$ "Simple Editing:" ,
	$ "" ,
	$ "amltutor video.mpg filter:clip in=100 out=200" ,
	$ "amltutor video.mpg video.mp2 filter:muxer" ,
	$ "" ,
	$ "Use --graphs for more information about graph generation and rules" ,
	$ "Use --huh? for using aml as a calculator" ,
	}
;

: --huh?
	{
	$ "Calculator:" ,
	$ "" ,
	1 2 + 
	$ "1 2 + = %s" ,
	1 2 3 * + 
	$ "1 2 3 * + = %s" ,
	}
;

: --test
	{
	$ "Test cases:" ,
	#$ "" ,
	#$ "--sanity to test video/audio playout capabilities" ,
	}
;

: --sanity
	test:
	play
;

: --graphs
	{
	$ "Graph:" ,
	$ "" ,
	$ "A graph consists of inputs and connected filters." ,
	$ "" ,
	$ "An input is an object which provides a number of frame objects which can be " ,
	$ "obtained by seeking to a position between 0 and the length of the input." ,
	$ "" ,
	$ "Frame objects provide a combination of an image, audio and properties which" ,
	$ "represent the requested position from the input." ,
	$ "" ,
	$ "A filter is an object which connects to one or more inputs and modifies" ,
	$ "their behaviour. It either modifies the frames which are generated by the" ,
	$ "input or it simply modifies the connected input (for example, clipping the" ,
	$ "input to provide a subset of its frames). Once connected, a filter can be" ,
	$ "used like any normal input." ,
	$ "" ,
	$ "All inputs, filters and frames provide a collection of properties which can be" ,
	$ "modified to change the objects behaviour." ,
	$ "" ,
	$ "To define a graph, we typically place our inputs and apply our filters like:" ,
	$ "" ,
	$ "file.mpg filter:clip in=100 out=200" ,
	$ "" ,
	$ "ie: the filter is connected to the item or items placed immediately before it." ,
	$ "" ,
	$ "All filters are introduced via the filter:<name>. Property assignments (name=value)" ,
	$ "are associated with the object which was last placed in the graph." ,
	$ "" ,
	$ "As another example, consider the following which provides various clips from the same" ,
	$ "input and are then joined together to form a single input:" ,
	$ "" ,
	$ "file.mpg" ,
	$ "filter:clip in=100 out=200" ,
	$ "file.mpg" ,
	$ "filter:clip in=500 out=700" ,
	$ "file.mpg" ,
	$ "filter:clip in=1500 out=1700" ,
	$ "filter:playlist slots=3" ,
	$ "" ,
	$ "The result thus incorporates all frames from each of the 3 clips." ,
	$ "" ,
	$ "Use --input for information on available inputs." ,
	$ "Use --filter for information on available filters." ,
	}
;

: --stores
	{
	$ "Stores:" ,
	$ "" ,
	$ "Stores receive frame objects from inputs." ,
	$ "" ,
	$ "Typically, stores can be thought of destinations for frames from a graph. They can" ,
	$ "provide playout capabilities, transcoding operations or analysis tools." ,
	$ "" ,
	$ "When unspecified on the command line, aml defaults to a basic player (preview:) and uses" ,
	$ "the SDL plugin (www.libsdl.org) to provide video and audio playout. This should provide" ,
	$ "out of the box video and audio playout of any given input graph." ,
	$ "" ,
	$ "Use --simple for additional information about the default player." ,
	$ "" ,
	$ "Alternatively, you can request to transcode the material to various formats, such as:" ,
	$ "" ,
	$ "file.mpg -- file.avi" ,
	$ "" ,
	$ "will transcode the input file.mpg to file.avi. Many conversions can be achieved using the" ,
	$ "avformat: store." ,
	$ "" ,
	$ "Use --store for additional information regarding store availability." ,
	}
;

: --advanced
	{
	$ "Advanced Switches:" ,
	$ "" ,
	$ "--no-stats    - do not display frame/position/fps reporting during playout" ,
	$ "--interactive - treat custom stores in a similar manner to the default store" ,
	$ "                ie: loop on end rather than terminating" ,
	}
;

