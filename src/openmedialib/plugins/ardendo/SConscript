Import(['local_env'])
import os

local_env.packages( 'boost_regex', 'boost_thread', 'boost_date_time', 'boost_filesystem', 'boost_system', 'libavformat' )
local_env.optional( 'ffmpeg' )

#options = local_env.optional( 'librsvg-2.0', 'gdk-pixbuf-2.0', 'libswscale' )
options = local_env.optional(  'libswscale' )

#if options[ 'have_librsvg-2.0' ]: local_env.Append( CPPDEFINES = [ 'HAVE_LIBRSVG' ] )

srcs = [ 'aml_ardendo.cpp',
         'filter_aml.cpp',
         'filter_audio_convert.cpp',
         'filter_charcoal.cpp',
         'filter_chroma_key.cpp',
         'filter_colour_space.cpp',
         'filter_compositor.cpp',
         'filter_extract.cpp',
         'filter_interlace.cpp',
         'filter_invert.cpp',
         'filter_locked_audio.cpp',
         'filter_loop.cpp',
	 'filter_lowpass.cpp',
         'filter_micro_vitc.cpp',
         'filter_mix_matrix.cpp',
         'filter_mono.cpp',
         'filter_montage.cpp',
         'filter_muxer.cpp',
         'filter_offset.cpp',
         'filter_pitch.cpp',
         'filter_pulldown.cpp',
         'filter_sar.cpp',
         'filter_sleep.cpp',
         'filter_slots.cpp',
         'filter_step.cpp',
         'filter_store.cpp',
         'filter_tee.cpp',
         'filter_threader.cpp',
         'filter_transport.cpp',
         'filter_volume.cpp',
         'input_aml_stack.cpp',
         'input_awi.cpp',
         'input_silence.cpp',
         'input_tone.cpp',
         'store_null.cpp',
         'store_ppm.cpp',
         'store_preview.cpp',
         'utility.cpp' ]
 
if local_env[ 'PLATFORM' ] == 'win32':
	srcs.append('aml_filters.rc')
	local_env.Append( CPPDEFINES = ['_CRT_SECURE_NO_WARNINGS'] )

# Make sure we place the binary correctly on windows
local_env[ 'win_target_path' ] = '$stage_ml_plugin'

the_headers = local_env.Glob('src/*.hpp', True, False, True)

bin = local_env.plugin( 'openmedialib_ardendo', srcs, headers = the_headers, pre = ['precompiled_headers.cpp', 'precompiled_headers.hpp'] )

local_env.copy_project_files( local_env[ 'stage_ml_plugin' ], bin + [ 'aml_ardendo.opl' ])

Return( 'bin' )

